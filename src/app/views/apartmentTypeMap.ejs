<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>地图找房</title>
<link type="text/css" rel="stylesheet" href="/css/style.css" />
<script type="text/javascript" src="/files/js/jquery-1.8.3.min.js"></script>

<script type="text/javascript" src="http://api.map.baidu.com/api?v=2.0&ak=hfr56zCA14KkpuRGsr2vKcV0GOG7KtH6"></script>
<script type="text/javascript" src="http://api.map.baidu.com/library/TextIconOverlay/1.2/src/TextIconOverlay_min.js"></script>
<script type="text/javascript" src="http://api.map.baidu.com/library/MarkerClusterer/1.2/src/MarkerClusterer_min.js"></script>
<style type="text/css">
		
		#allmap{width:100%;height:500px;}
		.djhbig{position:absolute; background:url(/img/djhbig2.png) no-repeat; color:#fff; height:48px; width:75px; line-height:12px; padding-top:27px; text-align:center; font-size:12px; white-space:nowrap;}
		
		.djhmids{position:absolute; background:url(/img/djhmids2.png) no-repeat; color:#fff; height:40px; width:60px; line-height:12px; padding-top:20px; text-align:center; font-size:12px; white-space:nowrap;}
		
		.djhmid{position:absolute; background:url(/img/djhmid2.png) no-repeat; color:#fff; height:25px; width:40px; line-height:12px; padding-top:15px; text-align:center; font-size:12px; white-space:nowrap;}
</style>
</head>
<body>

<!-----头部----->
<% include header.ejs %>
<!-----头部----->
<div class="clear"></div>
<div class="n_main" id="allmap">
</div>

<script type="text/javascript">
// 百度地图API功能
var map = new BMap.Map("allmap");
map.centerAndZoom('上海市',15);
map.enableScrollWheelZoom();
var pt = null;
var markers = [];
//getMarkers();
//获取聚合数据
function getMarkers()
{
	$.ajax({
        async:false,//同步请求
        type: "GET",
        url: "/apartment/map/api",
        dataType: "JSON",
        data: "1=1",
        success: function(data){
            $.each(data.apartmentTypes,function(key,val){
				
				 pt = new BMap.Point(val.longitude, val.latitude);
	  			 markers.push(new BMap.Marker(pt));
			});
			var markerClusterer = new BMapLib.MarkerClusterer(map, {markers:markers});
        }
    });
}
getDistrict();
getCommersearea();
getCommunity();
//地址解析对象

//var myGeo = new BMap.Geocoder();


//获取数据 并缓存起来
function getDistrict()  //顶级数据
{
	$.ajax({
        async:false,//同步请求
        type: "GET",
        url: "/apartment/map/district/api",
        dataType: "JSON",
        data: "1=1",
        success: function(data){
			$("div").data("districts",data.districts);  
        }
    });
}
function getCommersearea()  //二级数据
{
	$.ajax({
        async:false,//同步请求
        type: "GET",
        url: "/apartment/map/commersearea/api",
        dataType: "JSON",
        data: "1=1",
        success: function(data){
			$("div").data("commerseareas",data.commerseAreas);  
        }
    });
}
function getCommunity()  //三级数据
{
	$.ajax({
        async:false,//同步请求
        type: "GET",
        url: "/apartment/map/community/api",
        dataType: "JSON",
        data: "1=1",
        success: function(data){
			$("div").data("communitys",data.communities);  
        }
    });
}
//坐标数据批量解析



// 复杂的自定义覆盖物
function ComplexCustomOverlay(point, text, mouseoverText){
	this._point = point;
	this._text = text;
	this._overText = mouseoverText;
}



map.addEventListener("zoomend", function(){    
	var zoomnum = this.getZoom();
	var districts = $("div").data("districts");
	var commerseareas = $("div").data("commerseareas");
	var communitys = $("div").data("communitys");
  	console.log(districts); 
	console.log(commerseareas); 
	console.log(communitys); 
	//地址解析对象   
	var myGeo = new BMap.Geocoder();
	if(parseInt(zoomnum)<=13)
	{
	
	
		map.clearOverlays();  
		$.each(districts,function(key,val){
			
			myGeo.getPoint("上海市"+val._id.name, function(point){
				
				var txt = val._id.name + "<br/>"+ val.count + "套", mouseoverTxt = txt ;
				
				createPic(point,txt,'djhbig');
				
			
			}, "上海市");
			
		});
		
	}
	
	if(parseInt(zoomnum)>=14&&parseInt(zoomnum)<16)
	{
	
	
		map.clearOverlays();  
		$.each(commerseareas,function(key,val){
			
			myGeo.getPoint("上海市"+val._id.name, function(point){
				
				var txt = val._id.name + "<br/>"+ val.count + "套", mouseoverTxt = txt ;
				
				createPic(point,txt,'djhmids');
				
			
			}, "上海市");
			
		});
		
	}
	if(parseInt(zoomnum)>=16)
	{
	
	
		map.clearOverlays();  
		$.each(communitys,function(key,val){
			
				
				
				myGeo.getPoint(val._id.address, function(point){
				
					var txt =val.count + "套", mouseoverTxt = txt ;
					
					createPic(point,txt,'djhmid');
					
				
				}, "上海市");
			
			
		});
		
	}
	
});	

function createPic(point,txt,className)
{

	ComplexCustomOverlay.prototype = new BMap.Overlay();
	
	ComplexCustomOverlay.prototype.initialize = function(map){
		this._map = map;
		var div = this._div = document.createElement("div");
		div.className = className;
		
		
		var span = this._span = document.createElement("span");
		div.appendChild(span);
		
		div.getElementsByTagName("span")[0].innerHTML = this._text;      
		var that = this;
		
		var arrow = this._arrow = document.createElement("div");
		
		arrow.style.position = "absolute";
		arrow.style.width = "11px";
		arrow.style.height = "10px";
		arrow.style.top = "22px";
		arrow.style.left = "10px";
		arrow.style.overflow = "hidden";
		div.appendChild(arrow);
		
		div.onmouseover = function(){
			
			this.style.background = "url(/img/"+className+".png) no-repeat";
			this.getElementsByTagName("span")[0].innerHTML = that._overText;
		
		}
	
		div.onmouseout = function(){
			
			this.style.background = "url(/img/"+className+"2.png) no-repeat";
			this.getElementsByTagName("span")[0].innerHTML = that._text;
			
		}
	
		map.getPanes().labelPane.appendChild(div);
		
		return div;
	}
	ComplexCustomOverlay.prototype.draw = function(){
		var map = this._map;
		var pixel = map.pointToOverlayPixel(this._point);
		this._div.style.left = pixel.x - parseInt(this._arrow.style.left) + "px";
		this._div.style.top  = pixel.y - 30 + "px";
	}

	var myCompOverlay = new ComplexCustomOverlay(new BMap.Point(point.lng,point.lat), txt,txt);
				
	map.addOverlay(myCompOverlay);


}
</script>