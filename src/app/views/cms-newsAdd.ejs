<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>无标题文档</title>
<link href="/files/cms/css/style.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="/files/js/jquery-1.8.3.min.js"></script>
<script type="text/javascript" src="/files/lib/Validform_v5.3.2_min.js"></script>

</head>

<body>

	<div class="place">
    <span>位置：</span>
    <ul class="placeul">
    <li><a href="#">首页</a></li>
    <li><a href="#">表单</a></li>
    </ul>
    </div>
    
    <div class="formbody">
    
    <div class="formtitle"><span>基本信息</span></div>
    <form action="/cms/news" class="subform"  method="post">

    <ul class="forminfo">
        <li><label>新闻标题</label><input name="title" datatype="*" sucmsg=" "  type="text" class="dfinput" /><i class="Validform_checktip">标题不能超过30个字符</i></li>
        <li><label>来源</label><input name="source"  datatype="*"  sucmsg=" "  type="text" class="dfinput" /><i  class="Validform_checktip"></i></li>
        <li><label>作者</label><input name="author"  datatype="*"  sucmsg=" "  type="text" class="dfinput" value="" /><i  class="Validform_checktip"></i></li>
       
        <li><label>内容</label><textarea name="content"  datatype="*"  sucmsg=" "  cols="" rows="" class="textinput"></textarea><i  class="Validform_checktip"></i></li>
        <li><label>图片</label><input name="images" id="images" disabled="disabled"  type="text"  class="dfinput" value="" />&nbsp;&nbsp;&nbsp;&nbsp;<input name="pickfiles" id="pickfiles"  type="button" class="btn pickfiles" value="上传图片"/><i  class="Validform_checktip"></i></li>
        <li id="container"></li>
        <li><label>&nbsp;</label><span class="imgs"></span></li>
        <li><label>&nbsp;</label><input name="" type="submit" class="btn" value="确认保存"/></li>
    </ul>
    </form>
    
    </div>


</body>
<script>
$.Tipmsg.r=null;
		

$(function(){
    $(".subform").Validform({
        tiptype:function(msg,o,cssctl){
                if(!o.obj.is("form")){//验证表单元素时o.obj为该表单元素，全部验证通过提交表单时o.obj为该表单对象;
                        var objtip=o.obj.siblings(".Validform_checktip");
                        cssctl(objtip,o.type);
                        objtip.text(msg);
                }
        },
        ajaxPost:true,
        beforeSubmit: function(form) {
               
                return true;
        },
        callback:function(data){
                console.log(data);
                /*if(data.code!=0)  //验证失败
                {
                        alert(data.msg) ;

                }
                else
                {
                       location.href='/cms/news';
                }*/
                location.href='/cms/news';
              
        }
    });
});



</script>


<script type="text/javascript" src="/files/lib/plupload/moxie.js"></script>
<script type="text/javascript" src="/files/lib/plupload/plupload.dev.js"></script>
<script type="text/javascript" src="/files/lib/qiniu/qiniu.js"></script>
<script type="text/javascript" src="/files/lib/laydate/layer.js"></script>
<script>
var uploader = Qiniu.uploader({
    runtimes: 'html5,flash,html4',      // 上传模式,依次退化
    browse_button: 'pickfiles',         // 上传选择的点选按钮，**必需**
    // 在初始化时，uptoken, uptoken_url, uptoken_func 三个参数中必须有一个被设置
    // 切如果提供了多个，其优先级为 uptoken > uptoken_url > uptoken_func
    // 其中 uptoken 是直接提供上传凭证，uptoken_url 是提供了获取上传凭证的地址，如果需要定制获取 uptoken 的过程则可以设置 uptoken_func
    // uptoken : '<Your upload token>', // uptoken 是上传凭证，由其他程序生成
    uptoken_url: '/cms/uptoken/',         // Ajax 请求 uptoken 的 Url，**强烈建议设置**（服务端提供）
    
    get_new_uptoken: false,             // 设置上传文件的时候是否每次都重新获取新的 uptoken
    // downtoken_url: '/downtoken',
    // Ajax请求downToken的Url，私有空间时使用,JS-SDK 将向该地址POST文件的key和domain,服务端返回的JSON必须包含`url`字段，`url`值为该文件的下载地址
    unique_names: true,              // 默认 false，key 为文件名。若开启该选项，JS-SDK 会为每个文件自动生成key（文件名）
    // save_key: true,                  // 默认 false。若在服务端生成 uptoken 的上传策略中指定了 `sava_key`，则开启，SDK在前端将不对key进行任何处理
    domain: 'http://o7k9opgtr.bkt.clouddn.com/',     // bucket 域名，下载资源时用到，**必需**
    container: 'container',             // 上传区域 DOM ID，默认是 browser_button 的父元素，
    max_file_size: '100mb',             // 最大文件体积限制
    flash_swf_url: '/files/lib/plupload/Moxie.swf',  //引入 flash,相对路径
    max_retries: 3,                     // 上传失败最大重试次数
    dragdrop: true,                     // 开启可拖曳上传
    drop_element: 'container',          // 拖曳上传区域元素的 ID，拖曳文件或文件夹后可触发上传
    chunk_size: '4mb',                  // 分块上传时，每块的体积
    auto_start: true,                   // 选择文件后自动上传，若关闭需要自己绑定事件触发上传,
    
    init: {
        'FilesAdded': function(up, files) {
            plupload.each(files, function(file) {
                // 文件添加进队列后,处理相关的事情
            });
            layer.msg('上传中...', {icon: 16,shade: 0.4,time:3600000});
        },
        'BeforeUpload': function(up, file) {
               // 每个文件上传前,处理相关的事情
               
        },
        'UploadProgress': function(up, file) {
               // 每个文件上传时,处理相关的事情
               
        },
        'FileUploaded': function(up, file, info) {
               // 每个文件上传成功后,处理相关的事情
               // 其中 info 是文件上传成功后，服务端返回的json，形式如
               // {
               //    "hash": "Fh8xVqod2MQ1mocfI4S4KpRL6D98",
               //    "key": "gogopher.jpg"
               //  }
               // 参考http://developer.qiniu.com/docs/v6/api/overview/up/response/simple-response.html

               var domain = up.getOption('domain');
               var res = $.parseJSON(info);
               var sourceLink = domain + '/'+res.key; 
               $("#images").val($("#images").val()+' '+res.key);
               $(".imgs").append('<img src="'+sourceLink+'" width="150" height="120" >&nbsp;&nbsp;');
        },
        'Error': function(up, err, errTip) {
               //上传出错时,处理相关的事情
               console.log(errTip);
        },
        'UploadComplete': function() {
               //队列文件处理完毕后,处理相关的事情
               layer.closeAll();
        },
        'Key': function(up, file) {
            // 若想在前端对每个文件的key进行个性化处理，可以配置该函数
            // 该配置必须要在 unique_names: false , save_key: false 时才生效

            var key = "";
            // do something with key here
            return key
        }
    }
});

// domain 为七牛空间（bucket)对应的域名，选择某个空间后，可通过"空间设置->基本设置->域名设置"查看获取

// uploader 为一个 plupload 对象，继承了所有 plupload 的方法，参考http://plupload.com/docs


</script>
</html>




